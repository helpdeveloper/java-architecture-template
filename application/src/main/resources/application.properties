spring.application.name=Java Architecture Template
# Serialization
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=UTC
# Database
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/sampledb}
spring.datasource.username=${DATABASE_USER:user}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Management
management.endpoints.web.exposure.include=health
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.metrics.distribution.percentiles.http.server.requests=0.50, 0.55, 0.95, 0.99
# Management Metrics, Tracing and Exporters
management.tracing.sampling.probability=${OTEL_TRACES_SAMPLING_PROBABILITY:1.0}
management.otlp.metrics.export.enabled=${OTEL_EXPORTER_OTLP_METRICS_ENABLED:true}
management.otlp.metrics.export.url=${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:http://localhost:4318/v1/metrics}
management.otlp.metrics.export.step=${OTEL_EXPORTER_OTLP_METRICS_STEP:1s}
management.otlp.tracing.export.enabled=${OTEL_EXPORTER_OTLP_TRACES_ENABLED:true}
management.otlp.tracing.endpoint=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:http://localhost:4318/v1/traces}
# Kafka
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
# Kafka Consumer
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:sample-group}
spring.kafka.consumer.auto-offset-reset=${KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Kafka Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#Clients
spring.cloud.openfeign.client.config.random-data-api.url=${RANDOM_DATA_API_URL:https://random-data-api.com}
# Logging
logging.pattern.level='%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'